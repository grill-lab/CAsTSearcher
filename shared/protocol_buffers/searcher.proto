syntax = "proto3";
import "search_result.proto";

message SearchParameters {
    enum Collection {
        DOCUMENTS = 0;
        KILT = 1 [deprecated=true];
        MARCO = 2 [deprecated=true];
        WAPO = 3 [deprecated=true];
        ENTITIES = 4;
    }
    Collection collection = 1;
    map <string, string> parameters = 2; // other query parameters that may come up
}


message SearchQuery {
    string query = 1;
    int32 num_hits = 2;
    SearcherType searcher_type = 3;
    SearchParameters search_parameters = 4;
    
}

message DocumentQuery {
    string document_id =1;
    SearcherType searcher_type = 2;
    enum Collection {
        DOCUMENTS = 0;
        KILT = 1 [deprecated=true];
        MARCO = 2 [deprecated=true];
        WAPO = 3 [deprecated=true];
        ENTITIES = 4;
    }
    Collection collection = 3; // not ideal, but I don't care
}

enum SearcherType {
    SPARSE = 0;
    DENSE = 1;
    HYBRID = 2;
}


service Searcher {
    rpc search(SearchQuery) returns (SearchResult) {}
    rpc get_document(DocumentQuery) returns (Document) {}
}
